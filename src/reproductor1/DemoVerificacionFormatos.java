/*
 * Demo de Verificaci√≥n de Formatos de Audio
 * Verifica qu√© formatos est√°n realmente soportados en el sistema
 * @author GitHub Copilot
 */
package reproductor1;

import javax.swing.*;

public class DemoVerificacionFormatos {
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            System.out.println("=== DEMO DE VERIFICACI√ìN DE FORMATOS ===");
            System.out.println("Verificando soporte de formatos de audio en el sistema...\n");
            
            // Verificar formatos soportados
            NodoLista.verificarSoporteFormatos();
            
            System.out.println("\n=== RECOMENDACIONES ===");
            System.out.println("‚úÖ FORMATOS TOTALMENTE COMPATIBLES:");
            System.out.println("   ‚Ä¢ WAV - Formato sin compresi√≥n, m√°xima compatibilidad");
            System.out.println("   ‚Ä¢ AU - Formato de Sun/Oracle, bien soportado");
            System.out.println("   ‚Ä¢ AIFF - Formato de Apple, bien soportado");
            
            System.out.println("\n‚ö†Ô∏è  FORMATO CON LIMITACIONES:");
            System.out.println("   ‚Ä¢ MP3 - Requiere bibliotecas adicionales");
            System.out.println("     Soluciones:");
            System.out.println("     1. Usar archivos WAV para m√°xima compatibilidad");
            System.out.println("     2. Agregar biblioteca MP3SPI al proyecto");
            System.out.println("     3. Usar BasicPlayer library");
            System.out.println("     4. Convertir MP3 a WAV antes de reproducir");
            
            System.out.println("\n=== PRUEBA PR√ÅCTICA ===");
            System.out.println("Selecciona un archivo para probar su compatibilidad:");
            
            try {
                java.io.File archivo = NodoLista.mostrarExploradorWindows();
                if (archivo != null) {
                    System.out.println("\nüìÑ Archivo seleccionado: " + archivo.getName());
                    
                    boolean esValido = NodoLista.isValidAudioFormat(archivo.getName());
                    System.out.println("üîç Extensi√≥n v√°lida: " + (esValido ? "‚úÖ S√ç" : "‚ùå NO"));
                    
                    if (esValido) {
                        System.out.println("üéµ Intentando reproducir...");
                        boolean exito = NodoLista.reproducirAudio(archivo.toURI().toURL());
                        if (exito) {
                            System.out.println("‚úÖ Reproducci√≥n exitosa!");
                            // Detener despu√©s de 3 segundos
                            Thread.sleep(3000);
                            NodoLista.detenerAudio();
                            System.out.println("üõë Reproducci√≥n detenida");
                        } else {
                            System.out.println("‚ùå Error en la reproducci√≥n");
                        }
                    }
                } else {
                    System.out.println("‚ùå No se seleccion√≥ ning√∫n archivo");
                }
            } catch (Exception e) {
                System.out.println("‚ùå Error durante la prueba: " + e.getMessage());
            }
            
            System.out.println("\n=== DEMO COMPLETADA ===");
            System.exit(0);
        });
    }
}
